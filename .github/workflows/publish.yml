name: Publish
on:
  push:
    branches:
      - main

permissions: read-all

jobs:
  check:
    name: Check
    runs-on: ubuntu-22.04
    outputs:
      released: ${{ steps.version.outputs.released }}
      release_notes: ${{ steps.version.outputs.release_notes }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            nodejs.org:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          fetch-depth: 0 # To fetch all tags
      - name: Install Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version-file: .nvmrc
      - name: Check if version is already released
        id: version
        run: |
          VERSION="v$(cat .version)"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          if [ "$(git tag --list "$VERSION")" ]; then
            echo 'released=true' >> "$GITHUB_OUTPUT"
          else
            echo 'released=false' >> "$GITHUB_OUTPUT"

            {
              echo 'release_notes<<EOF'
              node script/get-release-notes.mjs
              echo 'EOF'
            } >> "$GITHUB_OUTPUT"
          fi
  github:
    name: GitHub
    runs-on: ubuntu-22.04
    if: ${{ needs.check.outputs.released == 'false' }}
    needs:
      - check
    permissions:
      contents: write # To push a tag, a branch, and create a GitHub Release
      id-token: write # To perform keyless signing with cosign
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@ebacdc22ef6c2cfb85ee5ded8f2e640f4c776dd5 # v2.0.0
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          fetch-depth: 0 # To fetch all major version branches
      - name: Install cosign
        uses: sigstore/cosign-installer@9becc617647dfa20ae7b1151972e9b3a2c338a2b # v2.8.1
        with:
          cosign-release: v1.13.1
      - name: Get major version
        uses: actions/github-script@d556feaca394842dc55e4734bf3bb9f685482fa0 # v6.3.3
        id: major-version
        with:
          result-encoding: string
          script: |
            const version = "${{ needs.check.outputs.version }}"
            const major = version.replace(/\.\d\.\d$/, "")
            return major
      - name: Release new version
        run: |
          git tag '${{ needs.check.outputs.version }}'
          git push origin '${{ needs.check.outputs.version }}'
      - name: Update major version branch
        run: |
          git push origin 'HEAD:${{ steps.major-version.outputs.result }}'
      - name: Sign Action
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign sign-blob \
            --output-certificate main.sh.cert \
            --output-signature main.sh.sign \
            src/main.sh
      - name: Verify signatures
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          cosign verify-blob \
            --certificate main.sh.cert \
            --signature main.sh.sign \
            src/main.sh
      - name: Create GitHub Release
        uses: ncipollo/release-action@a2e71bdd4e7dab70ca26a852f29600c98b33153e # v1.12.0
        with:
          body: ${{ needs.check.outputs.release_notes }}
          name: Release ${{ needs.check.outputs.version }}
          tag: ${{ needs.check.outputs.version }}
          artifacts: >-
            main.sh.cert,
            main.sh.sign
          draft: false
          makeLatest: true
          prerelease: false
