name: Verify code
on:
  pull_request:
    paths:
      - ".github/workflows/verify.yml"
      - ".github/codecov.yml"
      - "src/**.js"
      - "test/**.js"
      - ".nvmrc"
      - "action.yml"
      - "index.js"
      - "package-lock.json"
      - "rollup.config.js"
      - "stryker.config.json"
  push:
    paths:
      - ".github/workflows/verify.yml"
      - ".github/codecov.yml"
      - "src/**.js"
      - "test/**.js"
      - ".nvmrc"
      - "index.js"
      - "action.yml"
      - "package-lock.json"
      - "rollup.config.js"
      - "stryker.config.json"

permissions: read-all

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@v1.4.3
        with:
          egress-policy: block
          allowed-endpoints: >
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            n06iacprodeus1file4.blob.core.windows.net:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@v3.0.2
      - name: Install Node.js
        uses: actions/setup-node@v3.3.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Initialize repository
        run: npm ci
      - name: Build lib/index.js
        run: npm run build
  test-unit:
    name: Unit tests
    needs: [build]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@v1.4.3
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          egress-policy: block
          allowed-endpoints: >
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            n06iacprodeus1file4.blob.core.windows.net:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@v3.0.2
      - name: Install Node.js
        uses: actions/setup-node@v3.3.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Initialize repository
        run: npm ci
      - name: Run tests
        run: npm run test
  test-coverage:
    name: Coverage
    needs: [test-unit]
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@v1.4.3
        with:
          egress-policy: block
          allowed-endpoints: >
            artifactcache.actions.githubusercontent.com:443
            codecov.io:443
            github.com:443
            nodejs.org:443
            n06iacprodeus1file4.blob.core.windows.net:443
            registry.npmjs.org:443
            storage.googleapis.com:443
            uploader.codecov.io:443
      - name: Checkout repository
        uses: actions/checkout@v3.0.2
      - name: Install Node.js
        uses: actions/setup-node@v3.3.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Initialize repository
        run: npm ci
      - name: Run tests
        run: npm run coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.0
        with:
          file: ./_reports/coverage/lcov.info
  test-e2e:
    name: End-to-end tests
    needs: [test-unit]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@v1.4.3
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          egress-policy: block
          allowed-endpoints: >
            artifactcache.actions.githubusercontent.com:443
            github.com:443
            nodejs.org:443
            n06iacprodeus1file4.blob.core.windows.net:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      - name: Install Node.js
        uses: actions/setup-node@v3.3.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Initialize repository
        run: npm ci
      - name: Build lib/index.js
        run: npm run build
      - name: Run git-tag-annotation-action
        id: action-test
        uses: ./
        with:
          tag: v1.0.0
      - name: Echo git-tag-annotation-action output
        run: echo "${{ steps.action-test.outputs.git-tag-annotation }}"
      - name: Check git-tag-annotation-action output
        shell: bash
        run: |
          if ! [[ "${{ steps.action-test.outputs.git-tag-annotation }}" ]]; then
            exit 1
          fi
  test-mutation:
    name: Mutation tests
    needs: [test-unit]
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@v1.4.3
        with:
          egress-policy: block
          allowed-endpoints: >
            artifactcache.actions.githubusercontent.com:443
            dashboard.stryker-mutator.io:443
            github.com:443
            nodejs.org:443
            n06iacprodeus1file4.blob.core.windows.net:443
            registry.npmjs.org:443
      - name: Checkout repository
        uses: actions/checkout@v3.0.2
      - name: Install Node.js
        uses: actions/setup-node@v3.3.0
        with:
          cache: npm
          node-version-file: .nvmrc
      - name: Initialize repository
        run: npm ci
      - name: Run mutation tests
        env:
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_TOKEN }}
        run: npm run test:mutation
